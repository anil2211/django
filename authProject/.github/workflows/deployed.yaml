name: Deploy Django to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up SSh Key and whitelist EC2 IP address
        run:  |
          mkdor -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.EC2_HOST}} >> ~/.ssh/known_hosts
      - name: Copy file to remote server
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run:  |
          scp -r * $EC2_USERNAME@$EC2_HOST:/home/ubuntu 
      
      # - name: Run bash Script to deploy app
      #   env:
      #     EC2_HOST: ${{ secrets.EC2_HOST }}
      #     EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      #   run:  |
      #     ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY_PATH }} ubuntu@${{ secrets.EC2_PUBLIC_IP }} << EOF
      # - name: Clean up SSH Key
      #   if: always()
      #   run: rm -f ~/.ssh/id_rsa

      # - name: Set up AWS CLI
      #   run: |
      #     pip install awscli
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy to EC2
        run: |
          # SSH into EC2 and deploy
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY_PATH }} ubuntu@${{ secrets.EC2_PUBLIC_IP }} << EOF
            cd /path/to/your/django/project
            git pull origin main
            source venv/bin/activate
            pip install -r requirements.txt
            python manage.py migrate
            python manage.py collectstatic --noinput
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx
          EOF
